/* 
 * Exercise 1-20
 * Write a program detab that replaces tab
 * in the input with the proper number of blanks to space to the next tab stop.
 * Assune a fixed set of tab stops, say every n columns.
 * Should n be a variable or a symbolic parameter?
 */
#include <stdio.h>

#define TABW 8
#define MAXL 1000

int getline(char s[], int lim);
void detab(char line[], char tar[]);

int main(){
    char line[MAXL];
    char tar[MAXL * TABW];
    int len; // current line length

    while(len = getline(line, MAXL) > 0){
        detab(line, tar);
        printf("%s", tar);
    }
    
}

int getline(char s[], int lim){
    int c, i;
    for(i = 0; i < lim - 1 && (c = getchar()) != EOF && c != '\n'; i++){
        s[i] = c;
    }
    if(c == '\n'){
        s[i++] = c;
    }
    s[i] = '\0';
    return i;
}

void detab(char line[], char tar[]){
    int spacew = 0, i = 0, j = 0;
    while(line[i] != '\0'){
        if (line[i] == '\t')
        {
            spacew = TABW - i % TABW;
            while(spacew-- > 0){
                tar[j++] = '-';
            }
        }else{
            tar[j++] = line[i];
        }
        i++;   
    }
    tar[j] = '\0';
}


